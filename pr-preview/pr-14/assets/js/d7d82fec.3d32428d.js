"use strict";(self.webpackChunkpush_comms_website=self.webpackChunkpush_comms_website||[]).push([[50524],{28453:(t,n,e)=>{e.d(n,{R:()=>r,x:()=>s});var o=e(96540);const i={},a=o.createContext(i);function r(t){const n=o.useContext(a);return o.useMemo(function(){return"function"==typeof t?t(n):{...n,...t}},[n,t])}function s(t){let n;return n=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:r(t.components),o.createElement(a.Provider,{value:n},t.children)}},92436:(t,n,e)=>{e.r(n),e.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=e(74848),i=e(28453);const a={id:"docs-notifications-tutorial-token-transfer-notification-from-smart-contract",title:"Token transfer notification from smart contract",hide_title:!0,slug:"./token-transfer-notification-from-smart-contract",displayed_sidebar:"pushNotificationSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_notifications_tutorial--token_transfer_notification_from_smart_contract.png"},r="Overview",s={id:"notifications/tutorials/docs-notifications-tutorial-token-transfer-notification-from-smart-contract",title:"Token transfer notification from smart contract",description:"This tutorial explains how you can integrate notifications directly in your smart contract by importing Push comm smart contract and using its interface. We will be creating a simple token transfer notification for this guide.",source:"@site/docs/notifications/05-tutorials/04-Tutorial-Smart-Contract-Notifications.mdx",sourceDirName:"notifications/05-tutorials",slug:"/notifications/tutorials/token-transfer-notification-from-smart-contract",permalink:"/push-comms-website/pr-preview/pr-14/docs/notifications/tutorials/token-transfer-notification-from-smart-contract",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-comms-website/blob/main/docs/notifications/05-tutorials/04-Tutorial-Smart-Contract-Notifications.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"docs-notifications-tutorial-token-transfer-notification-from-smart-contract",title:"Token transfer notification from smart contract",hide_title:!0,slug:"./token-transfer-notification-from-smart-contract",displayed_sidebar:"pushNotificationSidebar",sidebar_position:4,image:"/assets/docs/previews/docs_notifications_tutorial--token_transfer_notification_from_smart_contract.png"},sidebar:"pushNotificationSidebar",previous:{title:"Advance - Create your channel using Safe",permalink:"/push-comms-website/pr-preview/pr-14/docs/notifications/tutorials/create-your-channel-using-safe"},next:{title:"Advance - Create channel and notif from smart contract",permalink:"/push-comms-website/pr-preview/pr-14/docs/notifications/tutorials/advance-create-channel-and-notif-from-smart-contract"}},c={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"What&#39;s going to happen",id:"whats-going-to-happen",level:2},{value:"Tutorial time",id:"tutorial-time",level:2},{value:"Code",id:"code",level:3},{value:"Add delegate",id:"add-delegate",level:3}];function l(t){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...t.components},{Head:e}=n;return e||function(t,n){throw new Error("Expected "+(n?"component":"object")+" `"+t+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"overview",children:"Overview"}),"\n",(0,o.jsx)(n.p,{children:"This tutorial explains how you can integrate notifications directly in your smart contract by importing Push comm smart contract and using its interface. We will be creating a simple token transfer notification for this guide."}),"\n",(0,o.jsx)(e,{children:(0,o.jsx)("title",{children:"Token Transfer Notification from Smart Contract | Tutorial | Push\n  Notifications | Push Documentation"})}),"\n",(0,o.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Ensure you have created your channel - ",(0,o.jsx)(n.a,{href:"/docs/notifications/tutorials/create-your-channel/",title:"Guide to create your channel for sending notifications from Push protocol",children:"Creating your channel"})]}),"\n",(0,o.jsxs)(n.li,{children:["Ensure you know what are channel delegates - ",(0,o.jsx)(n.a,{href:"/docs/notifications/tutorials/create-your-channel/#adding-delegates-for-channel",title:"Guide to adding delegates for your channel",children:"Adding channel delegates"})]}),"\n",(0,o.jsxs)(n.li,{children:["Ensure you know types of notifications to know what you want to send - ",(0,o.jsx)(n.a,{href:"/docs/notifications/build/types-of-notification/",title:"Guide explaining the types of notifications",children:"Types of notifications"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"whats-going-to-happen",children:"What's going to happen"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"We create a channel and copy it's address"}),"\n",(0,o.jsx)(n.li,{children:"We import interface and function call to trigger notification"}),"\n",(0,o.jsx)(n.li,{children:"We deploy the contract and add the contract address as delegate"}),"\n",(0,o.jsx)(n.li,{children:"Watch in \ud83d\ude32 as each transfer now notifies the wallet address about tokens received"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"tutorial-time",children:"Tutorial time"}),"\n",(0,o.jsxs)(n.p,{children:["Push protocol also supports sending notifications to user wallets directly from your smart contract and that too by ",(0,o.jsx)(n.strong,{children:"only adding 2 lines of extra code to your smart contract"})," \ud83c\udf89."]}),"\n",(0,o.jsx)(n.p,{children:"The best way to do it is by creating your channel first > tweaking your smart contract with notification logic and finally adding the deployed contract address as delegate to your channel."}),"\n",(0,o.jsxs)(n.p,{children:["To learn more about how to import interface and the function call of send notification, please see ",(0,o.jsx)(n.a,{href:"/docs/notifications/build/send-notification-via-smart-contract/",title:"Smart contract intergace to send notification",children:"send notification (via smart contract)"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"code",children:"Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-solidity",children:'pragma solidity ^0.8.20;\n// SPDX-License-Identifier: UNLICENSED\n\nimport "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/v4.5.0/contracts/token/ERC20/ERC20.sol";\nimport "https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/v4.9.0/contracts/utils/StringsUpgradeable.sol";\n\n// PUSH Comm Contract Interface\ninterface IPUSHCommInterface {\n    function sendNotification(address _channel, address _recipient, bytes calldata _identity) external;\n}\n\ncontract Push is ERC20 {\n\n    using StringsUpgradeable for uint256;\n    using StringsUpgradeable for address;\n\n    // EPNS COMM ADDRESS ON ETHEREUM SEPOLIA, CHECK THIS: https://docs.epns.io/developers/developer-tooling/epns-smart-contracts/epns-contract-addresses\n    address public EPNS_COMM_ADDRESS = 0x0C34d54a09CFe75BCcd878A469206Ae77E0fe6e7;\n\n    constructor ()\n        ERC20("Push Token", "PUSH")\n     {\n        _mint(msg.sender, 1000 * 10 ** uint(decimals()));\n    }\n\n    function transfer(address to, uint amount) override public returns (bool success) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        address sender = msg.sender;\n        uint256 readableAmount = amount / 10 ** uint(decimals());\n\n        //"0+3+Hooray! ", msg.sender, " sent ", token amount, " PUSH to you!"\n        IPUSHCommInterface(EPNS_COMM_ADDRESS).sendNotification(\n            0x554d29160f779Adf0a4328597cD33Ea1Df4D9Ee9, // from channel\n            to, // to recipient, put address(this) in case you want Broadcast or Subset. For Targeted put the address to which you want to send\n            bytes(\n                string(\n                    // We are passing identity here: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/identity/payload-identity-implementations\n                    abi.encodePacked(\n                        "0", // this is notification identity: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/identity/payload-identity-implementations\n                        "+", // segregator\n                        "3", // this is payload type: https://docs.epns.io/developers/developer-guides/sending-notifications/advanced/notification-payload-types/payload (1, 3 or 4) = (Broadcast, targeted or subset)\n                        "+", // segregator\n                        "Tranfer Alert", // this is notification title\n                        "+", // segregator\n                        "Hooray! ", // notification body\n                        sender.toHexString(), // notification body\n                        " sent ", // notification body\n                        readableAmount.toString(), // notification body\n                        " PUSH to you!" // notification body\n                    )\n                )\n            )\n        );\n\n        return true;\n    }\n}\n'})}),"\n",(0,o.jsx)(n.h3,{id:"add-delegate",children:"Add delegate"}),"\n",(0,o.jsxs)(n.p,{children:["The only remaining step is to deploy your contract and then go to your channel and ",(0,o.jsx)(n.a,{href:"/docs/notifications/tutorials/create-your-channel/#adding-delegates-for-channel",title:"Add delegate to your channel",children:"add the smart contract address as delegate to your channel"})," which will allow that smart contract address to send notification on behalf of your channel."]}),"\n",(0,o.jsx)(n.p,{children:"That's it! Your channel should now send notification as soon as anyone transfer your tokens from one address to the other \ud83c\udf89\ud83c\udf89\ud83c\udf89!"})]})}function u(t={}){const{wrapper:n}={...(0,i.R)(),...t.components};return n?(0,o.jsx)(n,{...t,children:(0,o.jsx)(l,{...t})}):l(t)}}}]);