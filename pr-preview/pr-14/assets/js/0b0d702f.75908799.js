"use strict";(self.webpackChunkpush_comms_website=self.webpackChunkpush_comms_website||[]).push([[20804],{11470:(e,t,n)=>{n.d(t,{A:()=>A});var i=n(96540),a=n(18215),s=n(23104),r=n(56347),l=n(205),o=n(57485),d=n(31682),c=n(89466);function u(e){var t,n;return null!==(t=null===(n=i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))||void 0===n?void 0:n.filter(Boolean))&&void 0!==t?t:[]}function h(e){const{values:t,children:n}=e;return(0,i.useMemo)(()=>{const e=null!=t?t:function(e){return u(e).map(e=>{let{props:{value:t,label:n,attributes:i,default:a}}=e;return{value:t,label:n,attributes:i,default:a}})}(n);return function(e){const t=(0,d.X)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[t,n])}function p(e){let{value:t,tabValues:n}=e;return n.some(e=>e.value===t)}function v(e){let{queryString:t=!1,groupId:n}=e;const a=(0,r.W6)(),s=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,o.aZ)(s),(0,i.useCallback)(e=>{if(!s)return;const t=new URLSearchParams(a.location.search);t.set(s,e),a.replace({...a.location,search:t.toString()})},[s,a])]}function m(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,s=h(e),[r,o]=(0,i.useState)(()=>function(e){var t;let{defaultValue:n,tabValues:i}=e;if(0===i.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:i}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${i.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=null!==(t=i.find(e=>e.default))&&void 0!==t?t:i[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:s})),[d,u]=v({queryString:n,groupId:a}),[m,b]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[a,s]=(0,c.Dv)(n);return[a,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:a}),f=(()=>{const e=null!=d?d:m;return p({value:e,tabValues:s})?e:null})();(0,l.A)(()=>{f&&o(f)},[f]);return{selectedValue:r,selectValue:(0,i.useCallback)(e=>{if(!p({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),b(e)},[u,b,s]),tabValues:s}}var b=n(92303);const f={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=n(74848);function j(e){let{className:t,block:n,selectedValue:i,selectValue:r,tabValues:l}=e;const o=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),c=e=>{const t=e.currentTarget,n=o.indexOf(t),a=l[n].value;a!==i&&(d(t),r(a))},u=e=>{var t;let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{var i;const t=o.indexOf(e.currentTarget)+1;n=null!==(i=o[t])&&void 0!==i?i:o[0];break}case"ArrowLeft":{var a;const t=o.indexOf(e.currentTarget)-1;n=null!==(a=o[t])&&void 0!==a?a:o[o.length-1];break}}null===(t=n)||void 0===t||t.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":n},t),children:l.map(e=>{let{value:t,label:n,attributes:s}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,ref:e=>o.push(e),onKeyDown:u,onClick:c,...s,className:(0,a.A)("tabs__item",f.tabItem,null==s?void 0:s.className,{"tabs__item--active":i===t}),children:null!=n?n:t},t)})})}function g(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find(e=>e.props.value===a);return e?(0,i.cloneElement)(e,{className:"margin-top--md"}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:s.map((e,t)=>(0,i.cloneElement)(e,{key:t,hidden:e.props.value!==a}))})}function I(e){const t=m(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",f.tabList),children:[(0,x.jsx)(j,{...e,...t}),(0,x.jsx)(g,{...e,...t})]})}function A(e){const t=(0,b.A)();return(0,x.jsx)(I,{...e,children:u(e.children)},String(t))}},19365:(e,t,n)=>{n.d(t,{A:()=>r});n(96540);var i=n(18215);const a={tabItem:"tabItem_Ymn6"};var s=n(74848);function r(e){let{children:t,hidden:n,className:r}=e;return(0,s.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,r),hidden:n,children:t})}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>l});var i=n(96540);const a={},s=i.createContext(a);function r(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},41622:(e,t,n)=>{n.d(t,{A:()=>m});var i=n(96540),a=n(18215),s=n(15066),r=n(92303),l=n(41422);const o={details:"details_lb9f",isBrowser:"isBrowser_bmU9",collapsibleContent:"collapsibleContent_i85q"};var d=n(74848);function c(e){return!!e&&("SUMMARY"===e.tagName||c(e.parentElement))}function u(e,t){return!!e&&(e===t||u(e.parentElement,t))}function h(e){let{summary:t,children:n,...a}=e;const h=(0,r.A)(),p=(0,i.useRef)(null),{collapsed:v,setCollapsed:m}=(0,l.u)({initialState:!a.open}),[b,f]=(0,i.useState)(a.open),x=i.isValidElement(t)?t:(0,d.jsx)("summary",{children:null!=t?t:"Details"});return(0,d.jsxs)("details",{...a,ref:p,open:b,"data-collapsed":v,className:(0,s.A)(o.details,h&&o.isBrowser,a.className),onMouseDown:e=>{c(e.target)&&e.detail>1&&e.preventDefault()},onClick:e=>{e.stopPropagation();const t=e.target;c(t)&&u(t,p.current)&&(e.preventDefault(),v?(m(!1),f(!0)):m(!0))},children:[x,(0,d.jsx)(l.N,{lazy:!1,collapsed:v,disableSSRStyle:!0,onCollapseTransitionEnd:e=>{m(e),f(!e)},children:(0,d.jsx)("div",{className:o.collapsibleContent,children:n})})]})}const p={details:"details_b_Ee"},v="alert alert--info";function m(e){let{...t}=e;return(0,d.jsx)(h,{...t,className:(0,a.A)(v,p.details,t.className)})}},69040:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var i=n(74848),a=n(28453),s=n(11470),r=n(19365);n(41622);const l={id:"docs-video-develop-initializing-video",title:"Initializing Video",hide_title:!0,slug:"./initializing-video",displayed_sidebar:"pushVideoSidebar",sidebar_position:5,image:"/assets/docs/previews/docs_video_develop--initializing_video.png"},o="Initialising Video API Overview",d={id:"video/build/docs-video-develop-initializing-video",title:"Initializing Video",description:"Push Video API abstract away connection and encryption methods to enable seamless video calls between wallets.",source:"@site/docs/video/01-build/05-Develop-Initializing-Video.mdx",sourceDirName:"video/01-build",slug:"/video/build/initializing-video",permalink:"/push-comms-website/pr-preview/pr-14/docs/video/build/initializing-video",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-comms-website/blob/main/docs/video/01-build/05-Develop-Initializing-Video.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"docs-video-develop-initializing-video",title:"Initializing Video",hide_title:!0,slug:"./initializing-video",displayed_sidebar:"pushVideoSidebar",sidebar_position:5,image:"/assets/docs/previews/docs_video_develop--initializing_video.png"},sidebar:"pushVideoSidebar",previous:{title:"Setup Video Stream",permalink:"/push-comms-website/pr-preview/pr-14/docs/video/build/setup-video-stream"},next:{title:"Request Video Call",permalink:"/push-comms-website/pr-preview/pr-14/docs/video/build/request-video-call"}},c={},u=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Initialize video API",id:"initialize-video-api",level:2},{value:"Initialize video parameters",id:"initialize-video-parameters",level:3},{value:"Understanding Video Lifecycle",id:"understanding-video-lifecycle",level:2},{value:"data variable",id:"data-variable",level:3},{value:"setData function",id:"setdata-function",level:3}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components},{Head:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"initialising-video-api-overview",children:"Initialising Video API Overview"}),"\n",(0,i.jsx)(t.p,{children:"Push Video API abstract away connection and encryption methods to enable seamless video calls between wallets."}),"\n",(0,i.jsx)(n,{children:(0,i.jsx)("title",{children:"Initializing Video API | Push Video | Push Documentation"})}),"\n","\n","\n",(0,i.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["You need to ",(0,i.jsx)(t.a,{href:"/docs/video/build/initialize-user/",title:"Initialize User for Push Video",children:"initialize use"})," and ",(0,i.jsx)(t.a,{href:"/docs/video/build/setup-video-stream",title:"Setup video stream for Push Video",children:"setup video stream"})," before initializing video."]}),"\n",(0,i.jsxs)(t.li,{children:["You also need to declare ",(0,i.jsx)(t.code,{children:"data"}),", ",(0,i.jsx)(t.code,{children:"setData"})," which are essentially a state/variable to hold video call-related data with a callback function to react to changes in video state."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"initialize-video-api",children:"Initialize video API"}),"\n",(0,i.jsxs)(s.A,{className:"codetabs",groupId:"push-video-api",children:[(0,i.jsx)(r.A,{value:"react",attributes:{className:"codetab react"},default:!0,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// state to handle current video call data\nconst [data, setData] = useState(CONSTANTS.VIDEO.INITIAL_DATA);\n\n// userAlice.video.initialize(onChange, {options?});\nconst aliceVideoCall = await userAlice.video.initialize(setData, {\n  stream: stream, // pass the stream object, refer Stream Video\n  config: {\n    video: true, // to enable video on start, for frontend use\n    audio: true, // to enable audio on start, for frontend use\n  },\n  media?: MediaStream, // to pass your existing media stream(for backend use)\n});\n"})})}),(0,i.jsx)(r.A,{value:"js",attributes:{className:"codetab js"},children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"// Setup data/setData for video call state management\nlet data = CONSTANTS.VIDEO.INITIAL_DATA;\n\n// setData is a function that will update the video call state\nconst setData = (fn) => {\n  data = fn(data);\n};\n\n// userAlice.video.initialize(onChange, {options?});\nconst aliceVideoCall = await userAlice.video.initialize(setData, {\n  stream: stream, // pass the stream object, refer Stream Video\n  config: {\n    video: true, // to enable video on start, for frontend use\n    audio: true, // to enable audio on start, for frontend use\n  },\n  media?: MediaStream, // to pass your existing media stream(for backend use)\n});\n"})})})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"initialize-video-parameters",children:"Initialize video parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Param"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Sub-Type"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Remarks"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"onChange"})})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"constant"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Function to update the video call data, takes a function as an argument which receives the latest state of data as a param and should return the modified/new state of data"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"options"})})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"VideoInitializeOptions"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"configuration properties for initializing the video."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"options.stream"})})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"PushStream"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:"Option to configure to enable listening to only certain chats or notifications."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"options.config.video"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["pass ",(0,i.jsx)(t.code,{children:"true"}),"to enable video on start, else pass ",(0,i.jsx)(t.code,{children:"false"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"options.config.audio"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"boolean"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["pass ",(0,i.jsx)(t.code,{children:"true"}),"to enable audio on start, else pass ",(0,i.jsx)(t.code,{children:"false"}),"."]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"-"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"options.media"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"MediaStream"})}),(0,i.jsx)(t.td,{children:"-"}),(0,i.jsxs)(t.td,{children:["Local stream. For backend use. Defaults to ",(0,i.jsx)(t.code,{children:"null"}),"."]})]})]})]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Note: Parameters ",(0,i.jsx)(t.em,{children:(0,i.jsx)(t.code,{children:"in this style"})})," are mandatory."]}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"understanding-video-lifecycle",children:"Understanding Video Lifecycle"}),"\n",(0,i.jsx)(t.h3,{id:"data-variable",children:"data variable"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["The ",(0,i.jsx)(t.code,{children:"data"})," variable is an object that is used to store all of the video call-related data."]}),"\n",(0,i.jsxs)(t.li,{children:["It is of type ",(0,i.jsx)(t.code,{children:"TYPES.VIDEO.DATA"})," and should be initialized with ",(0,i.jsx)(t.code,{children:"CONSTANTS.VIDEO.INITIAL_DATA"}),"."]}),"\n",(0,i.jsx)(t.li,{children:"For React-based projects, this would basically be a React state, and for vanilla JS projects, it will be a simple JS variable."}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["The type ",(0,i.jsx)(t.code,{children:"TYPES.VIDEO.DATA"})," is described below:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"// IMediaStream is a custom type that represents a media stream object or null\ntype IMediaStream = MediaStream | null;\n\n// VideoCallStatus is an enum that represents different statuses of a video call\n// These values are used to indicate the current status of a video call\nenum VideoCallStatus {\n  // call hasn't been started yet\n  UNINITIALIZED,\n\n  // call has been started by the initiator but not received by the receiver\n  INITIALIZED,\n\n  // call has been received by the receiver but not connected yet\n  RECEIVED,\n\n  // call has been connected, and both users can interact now\n  // MediaStream (includes both audio and video) exchange is now possible\n  CONNECTED,\n\n  // when the call request is denied by the peer (receiver)\n  DISCONNECTED,\n\n  // call has been ended by one of the users\n  ENDED\n\n  // retrying to establish the call from the INITIALIZED state\n  RETRY_INITIALIZED,\n\n  // retrying to establish the call from the RECEIVED state\n  RETRY_RECEIVED,\n}\n\ntype VideoCallData = {\n  meta: {\n    // contains meta info of the video call\n    chatId: string; // unique identifier for every push chat\n    initiator: {\n      address: string; // address of the initiator of the call\n      signal: any; // signal data from the initiator\n    };\n    broadcast?: {\n      // will be used in Push Spaces\n      livepeerInfo: any;\n      hostAddress: string;\n      coHostAddress: string;\n    };\n  };\n  // This property is used to store the info of the local peer/user\n  local: {\n    stream: IMediaStream; // the stream object\n    audio: boolean | null; // whether local audio is on or not\n    video: boolean | null; // whether local video is on or not\n    address: string; // address of the local peer/user\n  };\n  incoming: [\n    // This property is used to store the info of an incoming peer/user\n    {\n      stream: IMediaStream; // the stream object\n      audio: boolean | null; // whether incoming audio is on or not\n      video: boolean | null; // whether incoming video is on or not\n      address: string; // address of the incoming peer/user\n      status: VideoCallStatus; // video call status with a particular incoming peer\n      retryCount: number; // no. of retries required in establishing the call\n    },\n  ];\n};\n"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"CONSTANTS.VIDEO.INITIAL_DATA"})," looks like the following:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:'// As mentioned earlier, this should be used to initialize the data variable.\n{\n  meta: {\n    chatId: "",\n    initiator: {\n      address: "",\n      signal: null,\n    },\n  },\n  local: {\n    stream: null,\n    audio: null,\n    video: null,\n    address: "",\n  },\n  incoming: [\n    {\n      stream: null,\n      audio: null,\n      video: null,\n      address: "",\n      status: CONSTANTS.VIDEO.STATUS.UNINITIALIZED, // call is at the UNINITIALIZED status\n      retryCount: 0,\n    },\n  ],\n};\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Creating and initializing the ",(0,i.jsx)(t.code,{children:"data"})," variable is shown below:"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"import { TYPES, CONSTANTS } from '@pushprotocol/restapi';\n\n// 1. For a vanilla JS project\nlet data: TYPES.VIDEO.DATA = CONSTANTS.VIDEO.INITIAL_DATA;\n\n// 2. For a React project\nimport { useState } from 'react';\nconst [data, setData] = useState<TYPES.VIDEO.DATA>(\n  CONSTANTS.VIDEO.INITIAL_DATA\n);\n"})}),"\n",(0,i.jsx)(t.h3,{id:"setdata-function",children:"setData function"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"setData"})," is a function to update the video call data i.e., the ",(0,i.jsx)(t.code,{children:"data"})," variable."]}),"\n",(0,i.jsxs)(t.li,{children:["It is of type ",(0,i.jsx)(t.code,{children:"(fn: (data: TYPES.VIDEO.DATA) => TYPES.VIDEO.DATA) => void"})," and is described below:"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",children:"/*\n- fn function is supplied by the caller of setData()\n- fn is a function that accepts current 'data' as input and returns updated 'data'\n*/\nconst setData = (fn: (data: TYPES.VIDEO.DATA) => TYPES.VIDEO.DATA): void => {\n  /*\n    - Here, we are passing the current value of 'data' to fn\n    - The return value of fn() i.e., the updated value of 'data' is assigned back to 'data'\n  */\n  data = fn(data);\n};\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);