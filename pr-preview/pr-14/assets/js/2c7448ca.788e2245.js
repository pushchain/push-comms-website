"use strict";(self.webpackChunkpush_comms_website=self.webpackChunkpush_comms_website||[]).push([[69739],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>o});var n=s(96540);const a={},i=n.createContext(a);function r(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),n.createElement(i.Provider,{value:t},e.children)}},34837:(e,t,s)=>{s.d(t,{A:()=>f});s(96540);var n=s(18215),a=s(84142),i=s(75489),r=s(21312),o=s(20053);const c={cardContainer:"cardContainer_VPOR",cardTitle:"cardTitle_deVx",cardDescription:"cardDescription_crxe"};var d=s(86025),l=s(74848);function p(e){let{href:t,children:s}=e;return(0,l.jsx)(i.A,{href:(0,d.A)(t),className:(0,o.A)("card padding--lg",c.cardContainer),children:s})}function h(e){let{href:t,icon:s,title:n,description:a}=e;return(0,l.jsxs)(p,{href:(0,d.A)(t),children:[(0,l.jsxs)("h2",{className:(0,o.A)("text--truncate",c.cardTitle),title:n,children:[s," ",n]}),a&&(0,l.jsx)("p",{className:(0,o.A)("text--truncate",c.cardDescription),title:a,children:a})]})}function m(e){var t;let{item:s}=e;return(0,l.jsx)(h,{icon:"\ud83d\uddc3\ufe0f",title:s.label,description:null!==(t=s.description)&&void 0!==t?t:(0,r.T)({message:"{count} items",id:"theme.docs.DocCard.categoryDescription",description:"The default description for a category card in the generated index about how many items this category includes"},{count:s.items.length})})}function u(e){var t,s;let{item:n}=e;const i=(0,a.cC)(null!==(t=n.docId)&&void 0!==t?t:void 0);return(0,l.jsx)(h,{href:n.href,icon:"",title:n.label,description:null!==(s=n.description)&&void 0!==s?s:null==i?void 0:i.description})}function g(e){let{item:t}=e;switch(t.type){case"link":return(0,l.jsx)(u,{item:t});case"category":return(0,l.jsx)(m,{item:t});default:throw new Error(`unknown item type ${JSON.stringify(t)}`)}}function y(e){let{className:t}=e;const s=(0,a.$S)();return(0,l.jsx)(f,{items:s.items,className:t})}function f(e){const{items:t,className:s}=e;if(!t)return(0,l.jsx)(y,{...e});const i=(0,a.d1)(t);return(0,l.jsx)("section",{className:(0,n.A)("row",s),children:i.map((e,t)=>(0,l.jsx)("article",{className:"col col--6 margin-bottom--lg",children:(0,l.jsx)(g,{item:e})},t))})}},72096:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var n=s(74848),a=s(28453),i=s(34837);const r={id:"docs-chat-message-types-section",title:"Message Types",hide_title:!0,slug:"./message-types",displayed_sidebar:"pushChatSidebar",sidebar_position:102,image:"/assets/docs/previews/docs_chat__section--message_types.png"},o="Intro to Message Types",c={id:"chat/docs-chat-message-types-section",title:"Message Types",description:"Each message of Push Chat is a json payload that carries with it a message type and some parameters that enable each frontend that integrates Push Chat to understand and display various message types.",source:"@site/docs/chat/102-Message-Types-Section.mdx",sourceDirName:"chat",slug:"/chat/message-types",permalink:"/push-comms-website/pr-preview/pr-14/docs/chat/message-types",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-comms-website/blob/main/docs/chat/102-Message-Types-Section.mdx",tags:[],version:"current",sidebarPosition:102,frontMatter:{id:"docs-chat-message-types-section",title:"Message Types",hide_title:!0,slug:"./message-types",displayed_sidebar:"pushChatSidebar",sidebar_position:102,image:"/assets/docs/previews/docs_chat__section--message_types.png"},sidebar:"pushChatSidebar",previous:{title:"All API Calls",permalink:"/push-comms-website/pr-preview/pr-14/docs/chat/build/all-api-calls"},next:{title:"Text",permalink:"/push-comms-website/pr-preview/pr-14/docs/chat/message-types/text"}},d={},l=[];function p(e){const t={code:"code",h1:"h1",p:"p",...(0,a.R)(),...e.components},{Head:s}=t;return s||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"intro-to-message-types",children:"Intro to Message Types"}),"\n",(0,n.jsx)(t.p,{children:"Each message of Push Chat is a json payload that carries with it a message type and some parameters that enable each frontend that integrates Push Chat to understand and display various message types."}),"\n",(0,n.jsxs)(t.p,{children:["Push Chat supports an evergrowing list message types, all of which can be sent by ",(0,n.jsx)(t.code,{children:"chat.send"}),", though some require passing few additional parameters."]}),"\n",(0,n.jsx)(s,{children:(0,n.jsx)("title",{children:"Intro to Message Types | Push Chat | Push Documentation"})}),"\n","\n","\n",(0,n.jsx)(i.A,{})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);